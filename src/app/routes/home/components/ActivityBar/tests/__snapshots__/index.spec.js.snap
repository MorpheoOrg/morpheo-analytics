// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActivityBar components should render as expected 1`] = `
.emotion-41 {
  height: 100%;
  background-color: #d2d2d6;
  display: grid;
  grid-template-areas: 'top' 'middle' 'bottom';
  -webkit-align-content: space-between;
  -ms-flex-line-pack: space-between;
  align-content: space-between;
}

.emotion-21 {
  margin: 20px 0 20px 0;
  grid-area: grid-area:top;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.emotion-3 {
  margin: 5px;
  height: 42px;
  width: 42px;
}

.emotion-1 {
  border: none;
  background-color: inherit;
  color: #45464B;
  cursor: pointer;
  padding: 0;
  margin: 5px;
  height: 42px;
  width: 42px;
}

.emotion-1:hover {
  color: #45464B;
}

.emotion-1:focus {
  outline: 0;
}

.emotion-8 {
  border: none;
  background-color: inherit;
  color: #98999F;
  cursor: pointer;
  padding: 0;
  color: #C0C0C8;
  pointer-events: none;
  margin: 5px;
  height: 42px;
  width: 42px;
}

.emotion-8:hover {
  color: #45464B;
}

.emotion-8:focus {
  outline: 0;
}

.emotion-8:hover {
  color: #C0C0C8;
}

.emotion-23 {
  margin: 20px 0 20px 0;
  grid-area: grid-area:middle;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.emotion-39 {
  margin: 20px 0 20px 0;
  grid-area: grid-area:bottom;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(onlyUpdateForKeys(ActivityBar))>
    <onlyUpdateForKeys(ActivityBar)
      selectedIndex={0}
      setIndex={[Function]}
      setStatus={[Function]}
    >
      <ActivityBar
        selectedIndex={0}
        setIndex={[Function]}
        setStatus={[Function]}
      >
        <onlyUpdateForKeys(ComponentBar)
          bottomChildren={
            Array [
              <Styled(onlyUpdateForKeys(Styled(button)))
                disabled={true}
                icon={<CloudUpload />}
              >
                <CloudUpload />
              </Styled(onlyUpdateForKeys(Styled(button)))>,
              <Styled(onlyUpdateForKeys(Styled(button)))
                disabled={true}
                icon={<Settings />}
              >
                <Settings />
              </Styled(onlyUpdateForKeys(Styled(button)))>,
            ]
          }
          topChildren={
            Array [
              <Styled(onlyUpdateForKeys(Styled(button)))
                active={true}
                disabled={false}
                icon={<Poll />}
                onClick={[Function]}
              >
                <Poll />
              </Styled(onlyUpdateForKeys(Styled(button)))>,
              <Styled(onlyUpdateForKeys(Styled(button)))
                active={false}
                disabled={true}
                icon={<FlaskOutline />}
                onClick={[Function]}
              >
                <FlaskOutline />
              </Styled(onlyUpdateForKeys(Styled(button)))>,
              <Styled(onlyUpdateForKeys(Styled(button)))
                active={false}
                disabled={true}
                icon={<BookOpen />}
                onClick={[Function]}
              >
                <BookOpen />
              </Styled(onlyUpdateForKeys(Styled(button)))>,
            ]
          }
        >
          <ComponentBar
            bottomChildren={
              Array [
                <Styled(onlyUpdateForKeys(Styled(button)))
                  disabled={true}
                  icon={<CloudUpload />}
                >
                  <CloudUpload />
                </Styled(onlyUpdateForKeys(Styled(button)))>,
                <Styled(onlyUpdateForKeys(Styled(button)))
                  disabled={true}
                  icon={<Settings />}
                >
                  <Settings />
                </Styled(onlyUpdateForKeys(Styled(button)))>,
              ]
            }
            middleChildren={Array []}
            topChildren={
              Array [
                <Styled(onlyUpdateForKeys(Styled(button)))
                  active={true}
                  disabled={false}
                  icon={<Poll />}
                  onClick={[Function]}
                >
                  <Poll />
                </Styled(onlyUpdateForKeys(Styled(button)))>,
                <Styled(onlyUpdateForKeys(Styled(button)))
                  active={false}
                  disabled={true}
                  icon={<FlaskOutline />}
                  onClick={[Function]}
                >
                  <FlaskOutline />
                </Styled(onlyUpdateForKeys(Styled(button)))>,
                <Styled(onlyUpdateForKeys(Styled(button)))
                  active={false}
                  disabled={true}
                  icon={<BookOpen />}
                  onClick={[Function]}
                >
                  <BookOpen />
                </Styled(onlyUpdateForKeys(Styled(button)))>,
              ]
            }
          >
            <div
              className="emotion-41"
            >
              <Styled(div)
                gridArea="top"
              >
                <div
                  className="emotion-21 emotion-22"
                >
                  <Styled(onlyUpdateForKeys(Styled(button)))
                    active={true}
                    disabled={false}
                    icon={<Poll />}
                    key="Problems"
                    onClick={[Function]}
                  >
                    <onlyUpdateForKeys(Styled(button))
                      active={true}
                      className="emotion-3 emotion-0"
                      disabled={false}
                      icon={<Poll />}
                      onClick={[Function]}
                    >
                      <Styled(button)
                        active={true}
                        className="emotion-3 emotion-0"
                        disabled={false}
                        icon={<Poll />}
                        onClick={[Function]}
                      >
                        <button
                          className="emotion-0 emotion-1 emotion-2"
                          disabled={false}
                          onClick={[Function]}
                        >
                          <Poll>
                            <withStyles(SvgIcon)
                              viewBox="0 0 24 24"
                            >
                              <SvgIcon
                                classes={
                                  Object {
                                    "root": "MuiSvgIcon-root-1",
                                  }
                                }
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root-1"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M3,22V8H7V22H3M10,22V2H14V22H10M17,22V14H21V22H17Z"
                                  />
                                </svg>
                              </SvgIcon>
                            </withStyles(SvgIcon)>
                          </Poll>
                        </button>
                      </Styled(button)>
                    </onlyUpdateForKeys(Styled(button))>
                  </Styled(onlyUpdateForKeys(Styled(button)))>
                  <Styled(onlyUpdateForKeys(Styled(button)))
                    active={false}
                    disabled={true}
                    icon={<FlaskOutline />}
                    key="Experiments"
                    onClick={[Function]}
                  >
                    <onlyUpdateForKeys(Styled(button))
                      active={false}
                      className="emotion-3 emotion-0"
                      disabled={true}
                      icon={<FlaskOutline />}
                      onClick={[Function]}
                    >
                      <Styled(button)
                        active={false}
                        className="emotion-3 emotion-0"
                        disabled={true}
                        icon={<FlaskOutline />}
                        onClick={[Function]}
                      >
                        <button
                          className="emotion-0 emotion-8 emotion-2"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <FlaskOutline>
                            <withStyles(SvgIcon)
                              viewBox="0 0 24 24"
                            >
                              <SvgIcon
                                classes={
                                  Object {
                                    "root": "MuiSvgIcon-root-1",
                                  }
                                }
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root-1"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M5,19A1,1 0 0,0 6,20H18A1,1 0 0,0 19,19C19,18.79 18.93,18.59 18.82,18.43L13,8.35V4H11V8.35L5.18,18.43C5.07,18.59 5,18.79 5,19M6,22A3,3 0 0,1 3,19C3,18.4 3.18,17.84 3.5,17.37L9,7.81V6A1,1 0 0,1 8,5V4A2,2 0 0,1 10,2H14A2,2 0 0,1 16,4V5A1,1 0 0,1 15,6V7.81L20.5,17.37C20.82,17.84 21,18.4 21,19A3,3 0 0,1 18,22H6M13,16L14.34,14.66L16.27,18H7.73L10.39,13.39L13,16M12.5,12A0.5,0.5 0 0,1 13,12.5A0.5,0.5 0 0,1 12.5,13A0.5,0.5 0 0,1 12,12.5A0.5,0.5 0 0,1 12.5,12Z"
                                  />
                                </svg>
                              </SvgIcon>
                            </withStyles(SvgIcon)>
                          </FlaskOutline>
                        </button>
                      </Styled(button)>
                    </onlyUpdateForKeys(Styled(button))>
                  </Styled(onlyUpdateForKeys(Styled(button)))>
                  <Styled(onlyUpdateForKeys(Styled(button)))
                    active={false}
                    disabled={true}
                    icon={<BookOpen />}
                    key="Notebook"
                    onClick={[Function]}
                  >
                    <onlyUpdateForKeys(Styled(button))
                      active={false}
                      className="emotion-3 emotion-0"
                      disabled={true}
                      icon={<BookOpen />}
                      onClick={[Function]}
                    >
                      <Styled(button)
                        active={false}
                        className="emotion-3 emotion-0"
                        disabled={true}
                        icon={<BookOpen />}
                        onClick={[Function]}
                      >
                        <button
                          className="emotion-0 emotion-8 emotion-2"
                          disabled={true}
                          onClick={[Function]}
                        >
                          <BookOpen>
                            <withStyles(SvgIcon)
                              viewBox="0 0 24 24"
                            >
                              <SvgIcon
                                classes={
                                  Object {
                                    "root": "MuiSvgIcon-root-1",
                                  }
                                }
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root-1"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M19,2L14,6.5V17.5L19,13V2M6.5,5C4.55,5 2.45,5.4 1,6.5V21.16C1,21.41 1.25,21.66 1.5,21.66C1.6,21.66 1.65,21.59 1.75,21.59C3.1,20.94 5.05,20.5 6.5,20.5C8.45,20.5 10.55,20.9 12,22C13.35,21.15 15.8,20.5 17.5,20.5C19.15,20.5 20.85,20.81 22.25,21.56C22.35,21.61 22.4,21.59 22.5,21.59C22.75,21.59 23,21.34 23,21.09V6.5C22.4,6.05 21.75,5.75 21,5.5V7.5L21,13V19C19.9,18.65 18.7,18.5 17.5,18.5C15.8,18.5 13.35,19.15 12,20V13L12,8.5V6.5C10.55,5.4 8.45,5 6.5,5V5Z"
                                  />
                                </svg>
                              </SvgIcon>
                            </withStyles(SvgIcon)>
                          </BookOpen>
                        </button>
                      </Styled(button)>
                    </onlyUpdateForKeys(Styled(button))>
                  </Styled(onlyUpdateForKeys(Styled(button)))>
                </div>
              </Styled(div)>
              <Styled(div)
                gridArea="middle"
              >
                <div
                  className="emotion-23 emotion-22"
                />
              </Styled(div)>
              <Styled(div)
                gridArea="bottom"
              >
                <div
                  className="emotion-39 emotion-22"
                >
                  <Styled(onlyUpdateForKeys(Styled(button)))
                    disabled={true}
                    icon={<CloudUpload />}
                    key="Submission"
                  >
                    <onlyUpdateForKeys(Styled(button))
                      className="emotion-3 emotion-0"
                      disabled={true}
                      icon={<CloudUpload />}
                    >
                      <Styled(button)
                        active={false}
                        className="emotion-3 emotion-0"
                        disabled={true}
                        icon={<CloudUpload />}
                      >
                        <button
                          className="emotion-0 emotion-8 emotion-2"
                          disabled={true}
                        >
                          <CloudUpload>
                            <withStyles(SvgIcon)
                              viewBox="0 0 24 24"
                            >
                              <SvgIcon
                                classes={
                                  Object {
                                    "root": "MuiSvgIcon-root-1",
                                  }
                                }
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root-1"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M14,13V17H10V13H7L12,8L17,13M19.35,10.03C18.67,6.59 15.64,4 12,4C9.11,4 6.6,5.64 5.35,8.03C2.34,8.36 0,10.9 0,14A6,6 0 0,0 6,20H19A5,5 0 0,0 24,15C24,12.36 21.95,10.22 19.35,10.03Z"
                                  />
                                </svg>
                              </SvgIcon>
                            </withStyles(SvgIcon)>
                          </CloudUpload>
                        </button>
                      </Styled(button)>
                    </onlyUpdateForKeys(Styled(button))>
                  </Styled(onlyUpdateForKeys(Styled(button)))>
                  <Styled(onlyUpdateForKeys(Styled(button)))
                    disabled={true}
                    icon={<Settings />}
                    key="Settings"
                  >
                    <onlyUpdateForKeys(Styled(button))
                      className="emotion-3 emotion-0"
                      disabled={true}
                      icon={<Settings />}
                    >
                      <Styled(button)
                        active={false}
                        className="emotion-3 emotion-0"
                        disabled={true}
                        icon={<Settings />}
                      >
                        <button
                          className="emotion-0 emotion-8 emotion-2"
                          disabled={true}
                        >
                          <Settings>
                            <withStyles(SvgIcon)
                              viewBox="0 0 24 24"
                            >
                              <SvgIcon
                                classes={
                                  Object {
                                    "root": "MuiSvgIcon-root-1",
                                  }
                                }
                                viewBox="0 0 24 24"
                              >
                                <svg
                                  aria-hidden="true"
                                  className="MuiSvgIcon-root-1"
                                  focusable="false"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12,15.5A3.5,3.5 0 0,1 8.5,12A3.5,3.5 0 0,1 12,8.5A3.5,3.5 0 0,1 15.5,12A3.5,3.5 0 0,1 12,15.5M19.43,12.97C19.47,12.65 19.5,12.33 19.5,12C19.5,11.67 19.47,11.34 19.43,11L21.54,9.37C21.73,9.22 21.78,8.95 21.66,8.73L19.66,5.27C19.54,5.05 19.27,4.96 19.05,5.05L16.56,6.05C16.04,5.66 15.5,5.32 14.87,5.07L14.5,2.42C14.46,2.18 14.25,2 14,2H10C9.75,2 9.54,2.18 9.5,2.42L9.13,5.07C8.5,5.32 7.96,5.66 7.44,6.05L4.95,5.05C4.73,4.96 4.46,5.05 4.34,5.27L2.34,8.73C2.21,8.95 2.27,9.22 2.46,9.37L4.57,11C4.53,11.34 4.5,11.67 4.5,12C4.5,12.33 4.53,12.65 4.57,12.97L2.46,14.63C2.27,14.78 2.21,15.05 2.34,15.27L4.34,18.73C4.46,18.95 4.73,19.03 4.95,18.95L7.44,17.94C7.96,18.34 8.5,18.68 9.13,18.93L9.5,21.58C9.54,21.82 9.75,22 10,22H14C14.25,22 14.46,21.82 14.5,21.58L14.87,18.93C15.5,18.67 16.04,18.34 16.56,17.94L19.05,18.95C19.27,19.03 19.54,18.95 19.66,18.73L21.66,15.27C21.78,15.05 21.73,14.78 21.54,14.63L19.43,12.97Z"
                                  />
                                </svg>
                              </SvgIcon>
                            </withStyles(SvgIcon)>
                          </Settings>
                        </button>
                      </Styled(button)>
                    </onlyUpdateForKeys(Styled(button))>
                  </Styled(onlyUpdateForKeys(Styled(button)))>
                </div>
              </Styled(div)>
            </div>
          </ComponentBar>
        </onlyUpdateForKeys(ComponentBar)>
      </ActivityBar>
    </onlyUpdateForKeys(ActivityBar)>
  </Connect(onlyUpdateForKeys(ActivityBar))>
</Provider>
`;
